[{"C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\index.js":"1","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\App.js":"2","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\reportWebVitals.js":"3","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\Pages\\home\\home.js":"4","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\Pages\\register\\register.js":"5","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\Pages\\login\\login.js":"6","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\components\\RegisterForm\\RegisterForm.js":"7","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\components\\LoginHero\\LoginHero.js":"8","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\components\\FormInput\\FormInput.js":"9","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\components\\FormBtn\\FormBtn.js":"10","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\components\\LoginForm\\LoginForm.js":"11","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\apis\\LoginUser.js":"12","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\apis\\registerUser.js":"13","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\Pages\\ForgotPassword\\ForgotPassword.js":"14","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\Utilities\\helper.js":"15","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\Pages\\PasswordChange\\PasswordChange.js":"16","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\apis\\ResetPassword.js":"17","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\components\\AuthModal\\AuthModal.js":"18","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\components\\NavBar\\NavBar.js":"19","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\components\\NavItem\\NavItem.js":"20"},{"size":517,"mtime":1610828571513,"results":"21","hashOfConfig":"22"},{"size":954,"mtime":1612539370814,"results":"23","hashOfConfig":"22"},{"size":375,"mtime":1610828571516,"results":"24","hashOfConfig":"22"},{"size":278,"mtime":1612625539406,"results":"25","hashOfConfig":"22"},{"size":1066,"mtime":1612538182188,"results":"26","hashOfConfig":"22"},{"size":1082,"mtime":1612532253315,"results":"27","hashOfConfig":"22"},{"size":7236,"mtime":1612614794570,"results":"28","hashOfConfig":"22"},{"size":593,"mtime":1610996577239,"results":"29","hashOfConfig":"22"},{"size":1718,"mtime":1612523016067,"results":"30","hashOfConfig":"22"},{"size":448,"mtime":1612540306373,"results":"31","hashOfConfig":"22"},{"size":5806,"mtime":1612617269477,"results":"32","hashOfConfig":"22"},{"size":656,"mtime":1612616870951,"results":"33","hashOfConfig":"22"},{"size":995,"mtime":1612617006196,"results":"34","hashOfConfig":"22"},{"size":5015,"mtime":1612557081386,"results":"35","hashOfConfig":"22"},{"size":781,"mtime":1612624983402,"results":"36","hashOfConfig":"22"},{"size":3946,"mtime":1612615609322,"results":"37","hashOfConfig":"22"},{"size":1391,"mtime":1612617121093,"results":"38","hashOfConfig":"22"},{"size":354,"mtime":1612556947789,"results":"39","hashOfConfig":"22"},{"size":1492,"mtime":1612634045414,"results":"40","hashOfConfig":"22"},{"size":881,"mtime":1612632470650,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"r680i5",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\index.js",[],["86","87"],"C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\App.js",[],"C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\reportWebVitals.js",[],"C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\Pages\\home\\home.js",[],"C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\Pages\\register\\register.js",[],"C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\Pages\\login\\login.js",[],"C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\components\\RegisterForm\\RegisterForm.js",["88"],"import React,{useState,useEffect} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {validateEmail,validatePassword} from \"../../Utilities/helper\";\r\nimport FormInput from \"../FormInput/FormInput\";\r\nimport FormBtn from \"../FormBtn/FormBtn\";\r\nimport registerUser from \"../../apis/registerUser\";\r\nimport loginUser from \"../../apis/LoginUser\"\r\n\r\n\r\nconst startData={\r\n        laundryName:\"\",\r\n        username:\"\",\r\n        password:\"\",\r\n        confirmPassword:\"\",\r\n        phoneNumber:\"\",\r\n        address:\"\",\r\n        name:\"\"\r\n    };\r\nconst startBoolenState={\r\n        \"isPasswordMatch\":true,\r\n        \"isValidEmail\":true,\r\n        \"shouldButtonDisable\":true,\r\n        \"isRequestProcessing\":false,\r\n        \"isEmailAvailable\":true,\r\n        \"isValidPassword\":true\r\n    }\r\nfunction RegisterForm(){\r\n    const [formData,setFormData]=useState(startData)\r\n\r\n    const [booleanStates,setbooleanStates]=useState(startBoolenState);\r\n    \r\n    const [errorMessage,setErrorMessage]=useState(\"Error: Please check your network connection\")\r\n    const [networkError,setnetworkError]=useState(\"none\")\r\n    const history=useHistory();\r\n\r\n    function AddError(resp){\r\n        if(resp.statusCode===undefined){\r\n            setErrorMessage(\" Network Error: please check your network \")\r\n            setnetworkError(\"inline\")\r\n        }\r\n        else if(resp.statusCode===\"400\" && resp.message===\"user email already exist\"){\r\n            setbooleanStates(prev=>({...prev,isEmailAvailable:false,isValidEmail:false}))\r\n            setErrorMessage(\"Email Error: Email already taken\")\r\n        }\r\n        setbooleanStates(prev=>( {...prev,\"shouldButtonDisable\":false,\"isRequestProcessing\":false}))\r\n    }\r\n\r\n    function RemoveErrors(){\r\n        setbooleanStates(startBoolenState)\r\n        setnetworkError(\"none\");\r\n        setFormData(startData);\r\n    }\r\n    \r\n    const handleForm = async(e)=>{\r\n        e.preventDefault()\r\n\r\n        //prevent btn from being clicked while request is sent\r\n        setbooleanStates(prev=> ({...prev,\"isRequestProcessing\":true}))\r\n        //post user data\r\n        let registerResp=await registerUser(formData)\r\n        if (registerResp.statusCode!==\"201\"){\r\n            AddError(registerResp)} //return to page and display Errors}\r\n        else if(registerResp.statusCode===\"201\"){\r\n            //user was created successfully so login user \r\n            let loginResp= await loginUser(formData.username,formData.password)\r\n            if (loginResp.statusCode!==\"200\"){\r\n                //remove displayed validation errors and redirect to login page\r\n                RemoveErrors();\r\n                history.push(\"/\")\r\n            }\r\n\r\n            //remove displayed validation errors, save token and redirect to homepage\r\n            RemoveErrors();\r\n            localStorage.setItem(\"token\",loginResp.data)\r\n            history.push(\"/home\")  \r\n        }\r\n\r\n    }\r\n\r\n    const handleInput=(e)=>{\r\n        setFormData(prev=>{\r\n           return {\r\n               ...prev, [e.target.name]: e.target.value\r\n           }\r\n    })}\r\n\r\n    const PasswordsAreNotValid = ()=> {\r\n        let isPasswordValid=true;\r\n        //check if passwords match\r\n        if(formData.password !== formData.confirmPassword){\r\n            setbooleanStates(prev=>({...prev,isPasswordMatch:false}))\r\n            isPasswordValid=false;\r\n        }\r\n        else{setbooleanStates(prev=>({...prev,isPasswordMatch:true}))}\r\n        //check that password is valid\r\n        if(validatePassword(formData.password) || formData.password===\"\"){\r\n            setbooleanStates(prev=> ({...prev,isValidPassword:true}))\r\n        }\r\n        else{\r\n            setbooleanStates(prev=> ({...prev,isValidPassword:false}));\r\n            isPasswordValid=false;\r\n        }\r\n        return !isPasswordValid;\r\n    }\r\n\r\n    const EmailIsNotValid = () =>{\r\n        if(formData.username===\"\"){\r\n            setbooleanStates(prev=>({...prev,\"isValidEmail\":true,isEmailAvailable:true}))\r\n            return false;\r\n        }\r\n        else if(!validateEmail(formData.username)){\r\n            setbooleanStates(prev=>({...prev,\"isValidEmail\":false,isEmailAvailable:true}));\r\n            return true;\r\n        }\r\n        else{\r\n            setbooleanStates(prev=>({...prev,\"isValidEmail\":true,isEmailAvailable:true}));\r\n            return false;\r\n        }\r\n             \r\n    }\r\n\r\n    useEffect( () =>{\r\n        let isFormDataValid=true;\r\n        //validate that all feilds are not empty\r\n        Object.keys(formData).forEach(key=>{\r\n            if(formData[key]===\"\") { isFormDataValid=false }\r\n        })\r\n        //validate that passwords match and is a valid password\r\n        if(PasswordsAreNotValid()) { isFormDataValid= false }\r\n        //check email validity\r\n        if(EmailIsNotValid()) { isFormDataValid= false}\r\n\r\n        //allow request submission depending on validation state\r\n        if(isFormDataValid){\r\n           setbooleanStates(prev=>({...prev,\"shouldButtonDisable\":false}))}\r\n        else{\r\n           setbooleanStates(prev=>({...prev,\"shouldButtonDisable\":true}))}\r\n    },[formData])\r\n\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <p style={{display:networkError,color:\"red\",fontSize:\"0.8em\",paddingLeft:\"2em\"}}>{errorMessage}</p>\r\n            \r\n            <form onSubmit={handleForm} >\r\n                <FormInput type=\"text\" placeholder=\"Laundry Name\" name=\"laundryName\" handleInput={handleInput}\r\n                    value={formData.laundryName} \r\n                />\r\n                <FormInput type=\"text\" placeholder=\"Laundry Owner Full Name\" name=\"name\" handleInput={handleInput}\r\n                    value={formData.name}\r\n                />\r\n                <FormInput type=\"email\" placeholder=\"Email Address\" name=\"username\" handleInput={handleInput}\r\n                    errorMessage={booleanStates.isEmailAvailable ? \"Email is invalid\": \"Email already taken\"} \r\n                    isValid={booleanStates.isValidEmail} value={formData.username}\r\n                />\r\n                <FormInput type=\"password\" placeholder=\"Enter Password\" name=\"password\" handleInput={handleInput}\r\n                    value={formData.password} isValid={booleanStates.isValidPassword}\r\n                    errorMessage=\"Password must be at least 8 characters and contain a lower case,upper case and special character.\"\r\n                />\r\n                <FormInput type=\"password\" placeholder=\"Confirm Password\" name=\"confirmPassword\" handleInput={handleInput}\r\n                    errorMessage=\"Password do not match\" isValid={booleanStates.isPasswordMatch} value={formData.confirmPassword}\r\n                />\r\n                <FormInput type=\"text\" placeholder=\"Address\" name=\"address\" handleInput={handleInput}\r\n                    value={formData.address}\r\n                />\r\n                <FormInput type=\"text\" placeholder=\"Phone Number *\" name=\"phoneNumber\" handleInput={handleInput}\r\n                    value={formData.phoneNumber}\r\n                />\r\n                <FormBtn text=\"Register\" isRequestProcessing={booleanStates.isRequestProcessing} shouldButtonDisable={booleanStates.shouldButtonDisable}>\r\n\r\n                </FormBtn>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\components\\LoginHero\\LoginHero.js",[],"C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\components\\FormInput\\FormInput.js",[],"C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\components\\FormBtn\\FormBtn.js",[],"C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\components\\LoginForm\\LoginForm.js",[],"C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\apis\\LoginUser.js",[],"C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\apis\\registerUser.js",[],"C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\Pages\\ForgotPassword\\ForgotPassword.js",[],"C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\Utilities\\helper.js",[],"C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\Pages\\PasswordChange\\PasswordChange.js",["89"],"import React,{useEffect,useState} from 'react'\r\nimport { useLocation,Link} from \"react-router-dom\";\r\nimport FormInput from \"../../components/FormInput/FormInput\";\r\nimport FormBtn from \"../../components/FormBtn/FormBtn\";\r\nimport LoginHero from \"../../components/LoginHero/LoginHero\";\r\nimport {saveNewPassword} from \"../../apis/ResetPassword\";\r\nimport {validatePassword}  from \"../../Utilities/helper\"\r\n\r\nimport \"../../Utilities/utilities.css\"\r\n\r\n\r\nexport default function PasswordChange() {\r\n    const [data,setData]=useState({\r\n        password:\"\",\r\n        confirmPassword:\"\",\r\n        id:useQuery().get(\"id\")\r\n    })\r\n    const [booleanStates,setbooleanStates]=useState({\r\n        isPasswordMatch:true,\r\n        isRequestProcessing:false,\r\n        shouldButtonDisable:true,\r\n        isValidPassword:true\r\n    })\r\n    \r\n    function useQuery() {\r\n        return new URLSearchParams(useLocation().search);\r\n    }\r\n    const handleForm= async (e)=>{\r\n        e.preventDefault();\r\n        setbooleanStates(prev=> ({...prev,isRequestProcessing:true}))\r\n        let resp=await saveNewPassword(data);\r\n        setbooleanStates(prev=> ({...prev,isRequestProcessing:false}))\r\n        console.log(resp)\r\n    }\r\n    const handleInput = (e)=>{\r\n        setData(prev=> ({...prev,[e.target.name]:e.target.value}))\r\n    }\r\n    const PasswordsAreNotValid = ()=> {\r\n        let isPasswordValid=true;\r\n        //check if passwords match\r\n        if(data.password !== data.confirmPassword){\r\n            setbooleanStates(prev=>({...prev,isPasswordMatch:false}))\r\n            isPasswordValid=false;\r\n        }\r\n        else{setbooleanStates(prev=>({...prev,isPasswordMatch:true}))}\r\n        //check that password is valid\r\n        if(validatePassword(data.password) || data.password===\"\"){\r\n            setbooleanStates(prev=> ({...prev,isValidPassword:true}))\r\n        }\r\n        else{\r\n            setbooleanStates(prev=> ({...prev,isValidPassword:false}));\r\n            isPasswordValid=false;\r\n        }\r\n        return !isPasswordValid;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(PasswordsAreNotValid()){\r\n            setbooleanStates(prev=>({...prev,shouldButtonDisable:false}))\r\n        }\r\n        else{\r\n            setbooleanStates(prev=>({...prev,shouldButtonDisable:false}))\r\n        }\r\n    },[data.confirmPassword,data.password])\r\n       \r\n    return (\r\n        <section className=\"pg-con\">\r\n            <div className=\"pg-con-top\">\r\n                \r\n                <h2 className=\"pg-con-top-h1\">Reset your Password</h2>\r\n               <form onSubmit={handleForm}>\r\n                    <FormInput placeholder=\"New Password\" name=\"password\" handleInput={handleInput}\r\n                        value={data.password} type=\"password\" isValid={booleanStates.isValidPassword}\r\n                        errorMessage=\"password must be a least 8 characters and must contain at least a lower case,upper case,digit and special character.\"\r\n                    /> \r\n                    <FormInput placeholder=\"Confirm New Password\" name=\"confirmPassword\" handleInput={handleInput}\r\n                        value={data.confirmPassword} type=\"password\" errorMessage=\"passwords do not match.\"\r\n                        isValid={booleanStates.isPasswordMatch}\r\n                    />   \r\n                    <FormBtn text=\"Reset Password\" isRequestProcessing={booleanStates.isRequestProcessing} \r\n                        shouldButtonDisable={booleanStates.shouldButtonDisable}/>\r\n                </form>\r\n                <div className=\"auth-link-con\">\r\n                     <Link className=\"auth-link\" to=\"/\">Login</Link>\r\n                     <Link className=\"auth-link\" to=\"/register\">Register</Link>\r\n                    \r\n                </div>\r\n               \r\n            </div>\r\n            <div className=\"pg-con-bottom\">\r\n                \r\n                <LoginHero></LoginHero>\r\n            </div>\r\n            \r\n            \r\n        </section>\r\n    )\r\n}\r\n","C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\apis\\ResetPassword.js",[],"C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\components\\AuthModal\\AuthModal.js",[],"C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\components\\NavBar\\NavBar.js",[],"C:\\Users\\Joe\\Desktop\\joseph\\projects\\front end\\react projects\\LaundryWebClient\\src\\components\\NavItem\\NavItem.js",[],["90","91"],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":138,"column":7,"nodeType":"98","endLine":138,"endColumn":17,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":64,"column":7,"nodeType":"98","endLine":64,"endColumn":43,"suggestions":"101"},{"ruleId":"92","replacedBy":"102"},{"ruleId":"94","replacedBy":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'EmailIsNotValid' and 'PasswordsAreNotValid'. Either include them or remove the dependency array.","ArrayExpression",["106"],"React Hook useEffect has a missing dependency: 'PasswordsAreNotValid'. Either include it or remove the dependency array.",["107"],["104"],["105"],"no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},"Update the dependencies array to be: [EmailIsNotValid, PasswordsAreNotValid, formData]",{"range":"112","text":"113"},"Update the dependencies array to be: [PasswordsAreNotValid, data.confirmPassword, data.password]",{"range":"114","text":"115"},[5072,5082],"[EmailIsNotValid, PasswordsAreNotValid, formData]",[2284,2320],"[PasswordsAreNotValid, data.confirmPassword, data.password]"]